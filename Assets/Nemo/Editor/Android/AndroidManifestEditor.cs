using UnityEngine;
using UnityEditor;
using System.Collections;
using System.Collections.Generic;
using System.Xml;

public class AndroidManifestEditor : EditorWindow
{	
	UnityGUI_Manifest	 guiManifest;
	UnityGUI_Permission	 guiPermission;
	UnityGUI_Application guiApplication;
	UnityGUI_Activity	 guiActivity;
	UnityGUI_MetaData	 guiMetaData;
	Manifest			 manifest;
	Vector2	window_scroll = Vector2.zero;
	
	GUIStyle	PositiveButton = new GUIStyle("Button");
	GUIStyle	NegetiveButton = new GUIStyle("Button");
	GUIStyle	BoldLabel = new GUIStyle("Label");
	
	void initialize()
	{
		if (System.IO.File.Exists(Manifest.ManifestFile))
			manifest = LoadManifestFromFile(Manifest.ManifestFile);
		else
			manifest = new Manifest();
		
		guiManifest = new UnityGUI_Manifest(manifest);
		guiApplication = new UnityGUI_Application(manifest.application);
		guiActivity = new UnityGUI_Activity(manifest.application.activity);
		guiMetaData = new UnityGUI_MetaData(manifest.application.meta_data);
		guiPermission = new UnityGUI_Permission(manifest.permission);
		
		PositiveButton.fixedWidth = 30;
		PositiveButton.stretchWidth = false;
		NegetiveButton.fixedWidth = 30;
		NegetiveButton.stretchWidth = false;
		BoldLabel.normal.textColor = Color.white;
		BoldLabel.fontStyle = FontStyle.Bold;
		
		guiPermission.SetButtonStyles(PositiveButton, NegetiveButton);
		guiMetaData.SetButtonStyles(PositiveButton, NegetiveButton);
		guiActivity.SetButtonStyles(PositiveButton, NegetiveButton);
	}
	
	void OnGUI()
	{
		window_scroll = EditorGUILayout.BeginScrollView(window_scroll);
		EditorGUILayout.LabelField("Basic Manifest Properties", BoldLabel);
		guiManifest.OnGUI();
		EditorGUILayout.Space();
		EditorGUILayout.LabelField("Application Permissions", BoldLabel);
		guiPermission.OnGUI();
		EditorGUILayout.Space();
		EditorGUILayout.LabelField("Application Properties", BoldLabel);
		guiApplication.OnGUI();
		EditorGUILayout.Space();
		EditorGUILayout.LabelField("Modify Meta-Datas", BoldLabel);
		guiMetaData.OnGUI();
		EditorGUILayout.Space();
		EditorGUILayout.LabelField("Modify Activities", BoldLabel);
		guiActivity.OnGUI();
		EditorGUILayout.EndScrollView();
		EditorGUILayout.BeginHorizontal();
		EditorGUILayout.Space();
		if (GUILayout.Button("Export to AndroidManifest.xml"))
		{
			SaveManifestToFile(Manifest.ManifestFile, manifest);
		}
		if (GUILayout.Button("Discard and reset"))
		{
			LoadManifestFromFile(Manifest.ManifestFile);
		}
		if (GUILayout.Button("Close"))
		{
			this.Close();
		}
		EditorGUILayout.Space();
		EditorGUILayout.EndHorizontal();
		EditorGUILayout.Space();
	}
	
	#region Static helper functions
	public static Manifest		LoadManifestFromFile(string path)
	{
		Manifest m = new Manifest();
		System.IO.StreamReader reader = new System.IO.StreamReader(path);
		string xmldata = reader.ReadToEnd();
		reader.Close();
		XmlDocument doc = new XmlDocument();
		doc.LoadXml(xmldata);
		XmlNode manifest = doc.GetElementsByTagName(Manifest.Element.Manifest)[0];
		m.Read(manifest);
		doc.Clone();
		return m;
	}
	public static void			SaveManifestToFile(string path, Manifest m)
	{
		if (!System.IO.Directory.Exists(Manifest.ManifestFolder))
			System.IO.Directory.CreateDirectory(Manifest.ManifestFolder);
		XmlTextWriter	writer = new XmlTextWriter(path, System.Text.Encoding.UTF8);
		writer.Indentation = 4;
		writer.Formatting = Formatting.Indented;
		writer.Settings.NewLineHandling = NewLineHandling.Entitize;
		writer.Settings.NewLineOnAttributes = true;
		writer.WriteStartDocument();
		writer.WriteComment("This file is generated by Android Manifest Editor (created by Peyman Abdi peyman[at]nemo-games[dot]com).");
		m.Write(writer);
		writer.Close();
		AssetDatabase.Refresh(ImportAssetOptions.ForceUpdate);
	}
	#endregion
	
#if UNITY_ANDROID
	[MenuItem("Nemo/Android/Manifest Editor")]
	public static AndroidManifestEditor		ShowManifestEditorWindow()
	{
		AndroidManifestEditor editor = EditorWindow.GetWindow(typeof(AndroidManifestEditor),
			true, "Android Manifest Editor") as AndroidManifestEditor;
		editor.initialize();
		editor.Show();
		return editor;
	}
#endif
	
}
